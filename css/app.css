html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

html,
body {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

body {
    background: #ffffff url('../img/geometry2.png'); /* Background pattern from Subtle Patterns */
    font-family: 'Coda', cursive;
}

.container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

h1 {
    font-family: 'Open Sans', sans-serif;
    font-weight: 300;
}

/*
 * Styles for the deck of cards
 */

.deck {
    width: 660px;
    min-height: 680px;
    background: linear-gradient(160deg, #5ab1d3 0%, #6074d1 100%);
    padding: 32px;
    border-radius: 10px;
    box-shadow: 12px 15px 20px 0 rgba(46, 61, 73, 0.5);
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    margin: 0 0 3em;
}

.deck .card {
    height: 125px;
    width: 125px;
    background: #2e3d49;
    font-size: 0;
    color: #ffffff;
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 5px 2px 20px 0 rgba(46, 61, 73, 0.5);
    transition: transform 0.2s;
}

.deck .card:hover {
    transform: scale(1.1);
}

.deck .card.open {
    transform: rotateY(0);
    background: #02b3e4;
    cursor: default;
    animation: cardClickAnimation 1s;
}

.deck .card.show {
    font-size: 33px;
}

.deck .card.match {
    cursor: default;
    background: #02ccba;
    font-size: 33px;
    animation: cardMatch 0.5s ease-in;
}

.deck .card.incorrect {
    cursor: default;
    background: #cc023f;
    font-size: 33px;
    animation: cardMismatch 0.5s ease-in;
}

/*
 * Styles for the Score Panel
 */

.score-panel {
    text-align: left;
    width: 345px;
    margin-bottom: 10px;
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-around
}

.score-panel .stars {
    margin: 0;
    padding: 0;
    display: inline-block;
    margin: 0 5px 0 0;
    width: 51px;
}

.score-panel .stars li {
    list-style: none;
    display: inline-block;
}

.score-panel .restart {
    cursor: pointer;
}

.move-block {
    width: 100px;
    text-align: center;
}

.timer-block {
    width: 70px;
}

/*
 * styles for the result panel
 */

.results-modal {
    display: none;
    height: 100vh;
    width: 100vw;
    opacity: 0.95;
    background-color: #fff;
    position: fixed;
    top: 0;
}

.results-container {
    margin: 0 auto;
    min-width: 360px;
    max-width: 800px;
    text-align: center;
    padding-top: 25vh;
}

.heading-results {
    width: 100%;
}

.report-card {
    width: 100%;
}

.report-table {
    border: none;
    outline: #003a70;
    width: 270px;
    margin: 0px auto 30px;
}

.report-table td,
.report-table th {
    width: 33.33%;
    font-size: 17px;
    text-align: center;
    font-weight: 400;
}

.check .fa-check-circle {
    font-size: 50px;
    color: #bcf002;
    opacity: 1;
}

.congrats-msg {
    color: #003a70;
    font-size: 30px;
}

.restart-game {
    font-size: 16px;
    width: 120px;
    height: 50px;
    background-color: #003a70;
    color: #fff;
    border: none;
    box-shadow: 0px 0px 5px 2px rgba(87, 86, 86, 0.5);
    border-radius: 5px;
    letter-spacing: 1.3px;
    cursor: pointer;
}

/*
 * Animations for cards
 */
 @keyframes cardClickAnimation {
    0% {
        transform: scale(1);
    }

    25% {
        transform: scale(0.8);
    }

    50% {
        transform: scale(1.1);
    }

    100% {
        transform: scale(1);
    }
}

@keyframes cardMatch {
    0% {
        transform: translate(0px, 0px);
    }

    25% {
        transform: translate(-15px, 10px);
    }

    50% {
        transform: translate(10px, -5px);
    }

    75% {
        transform: translate(-5px, -4px);
    }

    87.5% {
        transform: translate(2.5px, 2.5px);
    }

    100% {
        transform: translate(0px, 0px);
    }
}

@keyframes cardMismatch {
    0% {
        transform: translate(0px, 0px);
    }

    25% {
        transform: translate(-15px, 10px);
    }

    50% {
        transform: translate(10px, -5px);
    }

    75% {
        transform: translate(-5px, 2.5px);
    }

    100% {
        transform: translate(0px, 0px);
    }
}